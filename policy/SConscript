# -*- python -*-

import lsst.sconsUtils
import glob
import os

# scons steals our environment away, so we have to reinstate it
env = lsst.sconsUtils.env.Clone()
for name in ("PYTHONPATH", "LD_LIBRARY_PATH",
             "DYLD_LIBRARY_PATH", "PATH"):
    if name in os.environ:
        env.AppendENVPath(name, os.environ[name])

# we may need an explicit library load path specified in the command
libpathstr = lsst.sconsUtils.utils.libraryLoaderEnvironment()

# We always run these commands with an explicit python rather than relying on the shebang
python = "{} python".format(libpathstr)

for camera in ["lsstCam", "imsim", "phosim"]:
    commandInst = env.Command("%s.yaml" % camera, "",
                              "%s python/lsst/obs/lsstCam/generateCamera.py --path %s:lsstCam:. $TARGET" %
                              (python, camera))

    env.Depends(commandInst, lsst.sconsUtils.targets["python"])
    for f in ["cameraHeader.yaml", "rafts.yaml", env.Glob("R??.yaml")]:
        env.Depends(commandInst, f)
